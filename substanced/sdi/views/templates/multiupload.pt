<div metal:define-macro="main"
     i18n:domain="substanced"
     metal:extend-macro="request.sdiapi.main_template">

  <metal:slot fill-slot="head-more">
    <metal:slot define-slot="head-more">
      <!-- CSS to style the file input field as button and adjust the Bootstrap progress bars -->
      <link rel="stylesheet" href="${request.static_url('substanced.sdi:static/vendor/jquery-file-upload/css/jquery.fileupload.css')}">
    </metal:slot>
  </metal:slot>
  <div metal:fill-slot="main">
    <!-- The fileinput-button span is used to style the file input field as button -->
    <span class="btn btn-success fileinput-button">
        <i class="glyphicon glyphicon-plus"></i>
        <span>Add files...</span>
        <!-- The file input field used as target for the file upload widget -->
        <input id="fileupload" type="file" name="files[]" multiple>
    </span>
    <br>
    <br>
    <!-- The global progress bar -->
    <div id="progress" class="progress">
        <div class="progress-bar progress-bar-success"></div>
    </div>
    <!-- The container for the uploaded files -->
    <div id="files" class="files"></div>
    <!-- The jQuery UI widget factory, can be omitted if jQuery UI is already included -->
    <script src="${request.static_url('substanced.sdi:static/vendor/jquery-file-upload/js/vendor/jquery.ui.widget.js')}" type="text/javascript"></script>
    <!-- The Load Image plugin is included for the preview images and image resizing functionality -->
    <script src="${request.static_url('substanced.sdi:static/vendor/jquery-load-image/load-image.min.js')}" type="text/javascript"></script>
    <!-- The Canvas to Blob plugin is included for image resizing functionality -->
    <script src="${request.static_url('substanced.sdi:static/vendor/javascript-canvas-to-blob/canvas-to-blob.js')}" type="text/javascript"></script>
    <!-- The basic File Upload plugin -->
    <script src="${request.static_url('substanced.sdi:static/vendor/jquery-file-upload/js/jquery.fileupload.js')}" type="text/javascript"></script>
    <!-- The File Upload processing plugin -->
    <script src="${request.static_url('substanced.sdi:static/vendor/jquery-file-upload/js/jquery.fileupload-process.js')}" type="text/javascript"></script>
    <!-- The File Upload image preview & resize plugin -->
    <script src="${request.static_url('substanced.sdi:static/vendor/jquery-file-upload/js/jquery.fileupload-image.js')}" type="text/javascript"></script>
    <!-- The File Upload audio preview plugin -->
    <script src="${request.static_url('substanced.sdi:static/vendor/jquery-file-upload/js/jquery.fileupload-audio.js')}" type="text/javascript"></script>
    <!-- The File Upload video preview plugin -->
    <script src="${request.static_url('substanced.sdi:static/vendor/jquery-file-upload/js/jquery.fileupload-video.js')}" type="text/javascript"></script>
    <!-- The File Upload validation plugin -->
    <script src="${request.static_url('substanced.sdi:static/vendor/jquery-file-upload/js/jquery.fileupload-validate.js')}" type="text/javascript"></script>
    <script>
      /*jslint unparam: true, regexp: true */
      /*global window, $ */
      $(function () {
          'use strict';
          // Change this to the location of your server-side upload handler:
          var url = window.location.hostname === 'blueimp.github.io' ?
                      '//jquery-file-upload.appspot.com/' : 'server/php/',
              uploadButton = $('<button/>')
                  .addClass('btn btn-primary')
                  .prop('disabled', true)
                  .text('Processing...')
                  .on('click', function () {
                      var $this = $(this),
                          data = $this.data();
                      $this
                          .off('click')
                          .text('Abort')
                          .on('click', function () {
                              $this.remove();
                              data.abort();
                          });
                      data.submit().always(function () {
                          $this.remove();
                      });
                  });
          $('#fileupload').fileupload({
              url: url,
              dataType: 'json',
              autoUpload: false,
              acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
              maxFileSize: 5000000, // 5 MB
              // Enable image resizing, except for Android and Opera,
              // which actually support image resizing, but fail to
              // send Blob objects via XHR requests:
              disableImageResize: /Android(?!.*Chrome)|Opera/
                  .test(window.navigator.userAgent),
              previewMaxWidth: 100,
              previewMaxHeight: 100,
              previewCrop: true
          }).on('fileuploadadd', function (e, data) {
              data.context = $('<div/>').appendTo('#files');
              $.each(data.files, function (index, file) {
                  var node = $('<p/>')
                          .append($('<span/>').text(file.name));
                  if (!index) {
                      node
                          .append('<br>')
                          .append(uploadButton.clone(true).data(data));
                  }
                  node.appendTo(data.context);
              });
          }).on('fileuploadprocessalways', function (e, data) {
              var index = data.index,
                  file = data.files[index],
                  node = $(data.context.children()[index]);
              if (file.preview) {
                  node
                      .prepend('<br>')
                      .prepend(file.preview);
              }
              if (file.error) {
                  node
                      .append('<br>')
                      .append($('<span class="text-danger"/>').text(file.error));
              }
              if (index + 1 === data.files.length) {
                  data.context.find('button')
                      .text('Upload')
                      .prop('disabled', !!data.files.error);
              }
          }).on('fileuploadprogressall', function (e, data) {
              var progress = parseInt(data.loaded / data.total * 100, 10);
              $('#progress .progress-bar').css(
                  'width',
                  progress + '%'
              );
          }).on('fileuploaddone', function (e, data) {
              $.each(data.result.files, function (index, file) {
                  if (file.url) {
                      var link = $('<a>')
                          .attr('target', '_blank')
                          .prop('href', file.url);
                      $(data.context.children()[index])
                          .wrap(link);
                  } else if (file.error) {
                      var error = $('<span class="text-danger"/>').text(file.error);
                      $(data.context.children()[index])
                          .append('<br>')
                          .append(error);
                  }
              });
          }).on('fileuploadfail', function (e, data) {
              $.each(data.files, function (index, file) {
                  var error = $('<span class="text-danger"/>').text('File upload failed.');
                  $(data.context.children()[index])
                      .append('<br>')
                      .append(error);
              });
          }).prop('disabled', !$.support.fileInput)
              .parent().addClass($.support.fileInput ? undefined : 'disabled');
      });
      </script>

  </div>
</div>